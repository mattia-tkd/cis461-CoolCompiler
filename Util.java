public class Util {
	public static String idToName(int id) {
		switch(id) {
			case sym.INHERITS:
				return "INHERITS";
			case sym.STRINGLIT:
				return "STRINGLIT";
			case sym.CASE:
				return "CASE";
			case sym.LPAREN:
				return "LPAREN";
			case sym.SEMI:
				return "SEMI";
			case sym.MINUS:
				return "MINUS";
			case sym.RPAREN:
				return "RPAREN";
			case sym.NOT:
				return "NOT";
			case sym.TYPEID:
				return "TYPEID";
			case sym.INTLIT:
				return "INTLIT";
			case sym.LT:
				return "LT";
			case sym.IN:
				return "IN";
			case sym.COMMA:
				return "COMMA";
			case sym.CLASS:
				return "CLASS";
			case sym.FI:
				return "FI";
			case sym.DIV:
				return "DIV";
			case sym.PLUS:
				return "PLUS";
			case sym.ASSIGN:
				return "ASSIGN";
			case sym.IF:
				return "IF";
			case sym.ID:
				return "ID";
			case sym.DOT:
				return "DOT";
			case sym.OF:
				return "OF";
			case sym.EOF:
				return "EOF";
			case sym.OD:
				return "OD";
			case sym.TRUE:
				return "TRUE";
			case sym.NEW:
				return "NEW";
			case sym.error:
				return "error";
			case sym.ISVOID:
				return "ISVOID";
			case sym.EQ:
				return "EQ";
			case sym.TIMES:
				return "TIMES";
			case sym.COLON:
				return "COLON";
			case sym.NEG:
				return "NEG";
			case sym.LBRACE:
				return "LBRACE";
			case sym.ELSE:
				return "ELSE";
			case sym.WHILE:
				return "WHILE";
			case sym.ESAC:
				return "ESAC";
			case sym.LET:
				return "LET";
			case sym.THEN:
				return "THEN";
			case sym.RBRACE:
				return "RBRACE";
			case sym.LEQ:
				return "LEQ";
			case sym.RIGHTARROW:
				return "RIGHTARROW";
			case sym.AT:
				return "AT";
			case sym.FALSE:
				return "FALSE";
			case sym.DO:
				return "DO";
			case Nodes.METHOD:
				return "METHOD";
			case Nodes.ATTRIBUTE:
				return "ATTRIBUTE";
			default: throw new IllegalArgumentException("Unknown token");
    		}
  	}
}
